server:
  port: 9000

spring:
  application:
    name: register-center

eureka:
  server:
    # https://blog.csdn.net/axzsd/article/details/79426530
    enable-self-preservation: false  #关闭自我保护模式（缺省为打开） # 开发测试时关闭自我保护机制，保证不可用服务及时踢出

  instance:
    hostname: eureka   # eureka 实例名称

    # 心跳检测检测与续约时间 # 测试时将值设置设置小些，保证服务关闭后注册中心能及时踢出服务
    ###Eureka客户端向服务端发送心跳的时间间隔，单位为秒（客户端告诉服务端自己会按照该规则）默认 30s
    lease-renewal-interval-in-seconds: 30
    ####Eureka服务端在收到最后一次心跳之后等待的时间上限，单位为秒，超过则剔除（客户端告诉服务端按照此规则等待自己） 默认 90s
    lease-expiration-duration-in-seconds: 90

    ## 单一节点（单个eureka-server方案）
# client:
#    # 表示是否从eureka server获取注册信息，如果是单一节点，不需要同步其他eureka server节点，则可以设置为false，但此处为集群，应该设置为true，默认为true，可不设置。
#    # 在做注册中心集群的时候，register-with-eureka必须打开，因为需要进行相互注册，不然副本无法可用。
#        register-with-eureka: false # 单一节点不向注册中心注册自己
#        fetch-registry: false       # 是否检索服务  因为自己是为注册中心，不需要检索服务
#        service-url:
#          defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/ # 注册中心访问地址，单一节点不向注册中心注册自己


    ## 多个节点（集群eureka-server方案）
  client:

#         表示是否从EUREKA SERVER获取注册信息，如果是单一节点，不需要同步其他EUREKA SERVER节点，则可以设置为FALSE，但此处为集群，应该设置为TRUE，默认为TRUE，可不设置。
#         在做注册中心集群的时候，register-with-eureka必须打开，因为需要进行相互注册，不然副本无法可用。
    register-with-eureka: true # 集群相互注册

    # 表示是否从Eureka Server获取注册信息，默认为true。 如果这是一个单点的 Eureka Server，不需要同步其他节点的数据，可以设为false。
    # 集群时fetchRegistry打开才能从eureka拉取服务列表，ribbon才能做负载均衡。
    fetch-registry: true       # 是否检索服务

    service-url:
#      defaultZone: http://eureka01:9001/eureka/,http://eureka02:9002/eureka/  # 注册中心访问地址，集群相互注册 (标准写法，去除自己。)
      defaultZone: http://eureka:9000/eureka/,http://eureka01:9001/eureka/,http://eureka02:9002/eureka/  # 注册中心访问地址，集群相互注册(偷懒写法，全部sever都写上。反正自己也不向自己注册。)